# This is a basic workflow to help you get started with Actions

name: DEPLOY TO CLOUD RUN

# Controls when the workflow will run
on:
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: Deploy Blog Service
    runs-on: ubuntu-latest

    env:
      SERVICE_NAME: ${{ secrets.SERVICE_NAME }}
      SERVICE: ${{ secrets.SERVICE }}
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      REGION: ${{ secrets.REGION }}
      ENV_VAR: ${{ secrets.ENV_VAR }}
      CONNECTOR: ${{ secrets.CONNECTOR }}

    steps:
      - uses: actions/checkout@v2

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      # Build docker image
      - name: Image
        run: |-
          docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA .

      # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |
          gcloud auth configure-docker -q
 
      # Push image to Google Container Registry
      - name: Build
        run: |-
          docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA

      - name: Set Latest
        run: |-
          gcloud container images add-tag gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA gcr.io/$PROJECT_ID/$SERVICE_NAME:latest

      - name: Deploy to Cloud Run
        run: |-
          gcloud run deploy $SERVICE \
            --project $PROJECT_ID \
            --image gcr.io/$PROJECT_ID/$SERVICE_NAME:latest \
            --region $REGION \
            --set-env-vars $ENV_VAR \
            --vpc-connector $CONNECTOR \
            --allow-unauthenticated
